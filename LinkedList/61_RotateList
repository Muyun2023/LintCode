/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null||head.next==null||k==0){
            return head;
        }

        ListNode dummy=new ListNode(0);
        dummy.next=head;
        ListNode fast=dummy;
        ListNode slow=dummy;
        
        int i; //这里要单独写出来，因为后面j的for循环中需要用到i
        for(i=0;fast.next!=null;i++){
            fast=fast.next;//现在fast指向末尾节点
        }

        for(int j = i - k % i;j > 0;j--){
            slow=slow.next;//现在slow指向断点节点，它之后的节点是要旋转走的
        }

        fast.next=dummy.next; //末尾节点指向头结点，形成一个环了
        dummy.next=slow.next; //新的头结点变成slow后面的那个节点
        slow.next=null;

        return dummy.next;
    }
}
