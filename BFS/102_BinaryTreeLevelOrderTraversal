class Solution {
    
    public List<List<Integer>> levelOrder(TreeNode root) {
        List res= new ArrayList();
        
        if(root==null){return res;}

        Queue<TreeNode>queue=new LinkedList<>();
        queue.offer(root);

        while(!queue.isEmpty()){
            ArrayList<Integer>level=new ArrayList<>(); //这个arraylist在while中不断新建
            int size=queue.size();//queue的size也是遍历完一层后就会变化为新一层的size
            for(int i=0;i<size;i++){
                TreeNode head=queue.poll();
                level.add(head.val);
                if(head.left!=null){queue.offer(head.left);}
                if(head.right!=null){queue.offer(head.right);}
            }
            res.add(level);
        }
    return res;
    }
}
